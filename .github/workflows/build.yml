name: "Build"

env:
  COMPOSE_BAKE: "true"

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup component add clippy rustfmt
      - run: cargo check --all-features --all-targets
      - run: cargo clippy --all-features --all-targets
      - run: cargo fmt --check
    timeout-minutes: 5

  build:
    needs: ["check"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build --locked --release
    timeout-minutes: 15

  test-grpc:
    needs: ["build"]
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: jp_postal_code
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Start gRPC server
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/jp_postal_code
          SQLX_OFFLINE: true
        run: |
          cargo build --release --bin jp-postal-code
          cargo run --release --bin jp-postal-code &
          sleep 10  # Wait for server to start and initialize database
      - uses: k2tzumi/runn-action@latest
        with:
          path_pattern: tests/runn/*.yml
    timeout-minutes: 10
