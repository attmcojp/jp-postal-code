name: "Build"

env:
  COMPOSE_BAKE: "true"
  REGISTRY: "ghcr.io"
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches:
      - "main"
  pull_request:
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: rustup component add clippy rustfmt
      - run: cargo check --all-features --all-targets
      - run: cargo clippy --all-features --all-targets
      - run: cargo fmt --check
    timeout-minutes: 5

  build:
    needs: ["check"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - run: cargo build --locked --release
    timeout-minutes: 15

  docker-build:
    if: github.ref == 'refs/heads/main'
    needs: ["check"]
    runs-on: "ubuntu-latest"
    permissions:
      attestations: write
      contents: read
      id-token: write
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - uses: docker/build-push-action@v6
        id: push
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ github.event_name != 'pull_request' }}
    timeout-minutes: 15
